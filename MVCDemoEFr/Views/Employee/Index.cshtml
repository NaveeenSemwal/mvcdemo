@model  PagedList.IPagedList<Employee.Model.EmployeeViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    <div class="row">
        <div class="col-lg-5 col-md-5">

            Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control" })

        </div>
        <div class="col-lg-2 col-md-2">

            <input type="submit" value="Search" />

        </div>
    </div>
    <br />
}
<table class="table">
    <tr>
        @*<th>
                @Html.DisplayNameFor(model => model.TitleId)
            </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.FirstName)*@
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>>*@
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Dob)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.IdProofName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Mobile)
        </th>
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CreatedOn)*@
            @Html.ActionLink("Created Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.UpdatedOn)
            </th>*@
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            @*<td>
                    @Html.DisplayFor(modelItem => item.TitleId)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dob)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.IdProofName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            <td>
                @Html.DisplayFor(modelItem => item.Mobile)
            </td>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.UpdatedOn)
                </td>*@
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.EmployeeId }) @*|
                    @Html.ActionLink("Details", "Details", new { id = item.EmployeeId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.EmployeeId })*@
            </td>
        </tr>
    }

</table>
@*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@
@for (int i = 1; i < 3; i++)
{
    @Html.ActionLink(i.ToString(), "Index", new { page = i })
}


