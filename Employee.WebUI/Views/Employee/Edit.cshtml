@model Employee.Model.EmployeeViewModel

@{
    ViewBag.Title = "";

}

<h2>Edit</h2>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    $(document).ready(function () {
        var filename = "";
        $('#idproof').hide();
        $('#idproofname').show();

        $('#deleteItem').click(function (e) {
            e.preventDefault();
            var id = '@ViewBag.EmployeeId';
            filename = '@ViewBag.ImageName'

            var url = "https://localhost:44349/ems/employee/delete/file/" + id;

       // alert(url);

            if (confirm('Do you really want to delete this item?')) {
                $.ajax({
                    url: url,
                    type: 'Post',
                    data: { id: id, filename: filename}
                }).done(function (data) {
                    console.log(data);
                    if (data == true) {
                        $('#idproof').show();
                        $('#idproofname').hide();
                        alert("File deleted successfully.");
                    }
                    else if (data==false) {
                        $('#idproof').hide();
                        $('#idproofname').show();
                        alert("File does not exist.");
                    }

                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    }

    );

</script>
@using (Html.BeginForm("Create", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Update Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeId, new { @id = "id" })
        @Html.HiddenFor(model => model.FileName, new { @id = "filename" })

        <div class="form-group">
            @Html.LabelFor(model => model.TitleId, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TitleId, (IEnumerable<SelectListItem>)ViewBag.TitleList as SelectList, "Select Title", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TitleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <span>Male </span>  @Html.RadioButtonFor(model => model.Gender, "M", new { htmlAttributes = new { @class = "form-control" } })
                <span>Female </span> @Html.RadioButtonFor(model => model.Gender, "F", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dob, "{0:yyyy/MM/dd}", new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group" id="idproof">
            @Html.LabelFor(model => model.IdProofName, "Id proof", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.TextBoxFor(model => model.IdProofName, new { type = "file" }) <br />

                @Html.ValidationMessageFor(model => model.IdProofName, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group" id="idproofname">
            @Html.LabelFor(model => model.IdProofName, "Uploaded image", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                <a href="@ViewBag.ImagePath" target="_blank">@ViewBag.ImageName</a><a style="color:red" href="#" id="deleteItem"><i class="fa fa-remove" style="font-size:16px;margin-left:5%"></i></a>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CountryId, (IEnumerable<SelectListItem>)ViewBag.CountryList as SelectList, "Select the country", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { type = "email", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
